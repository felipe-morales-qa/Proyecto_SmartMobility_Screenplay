"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SceneSequenceReportContext = void 0;
const model_1 = require("@serenity-js/core/lib/model");
const SerenityBDDReportContext_1 = require("../SerenityBDDReportContext");
/**
 * @package
 */
class SceneSequenceReportContext extends SerenityBDDReportContext_1.SerenityBDDReportContext {
    parameters = [];
    worstOutcomeSoFar = new model_1.ExecutionSuccessful();
    whenOutcomeIsMoreRecent = (outcome_) => true;
    whenOutcomeIsWorseThanBefore = (outcome) => outcome.isWorseThan(this.worstOutcomeSoFar);
    shouldUpdateOverallResult = this.whenOutcomeIsWorseThanBefore.bind(this);
    usingOutlineModeOutcomeReporting() {
        this.shouldUpdateOverallResult = this.whenOutcomeIsWorseThanBefore.bind(this);
        return this;
    }
    usingRetryModeOutcomeReporting() {
        this.shouldUpdateOverallResult = this.whenOutcomeIsMoreRecent.bind(this);
        return this;
    }
    build() {
        const report = super.build();
        this.parameters.forEach((entry, index) => {
            const values = entry.parameters.values;
            const sceneDescription = Object.keys(values).map(key => `${key}: ${values[key]}`).join(', ').trim();
            report.testSteps[index].description += ` #${index + 1} - ${sceneDescription}`;
        });
        return report;
    }
}
exports.SceneSequenceReportContext = SceneSequenceReportContext;
//# sourceMappingURL=SceneSequenceReportContext.js.map